spring.application.name=MASTER-SERVICE
server.port=${CLIENT_PORT:8085}

# eureka server url
eureka.client.service-url.default-zone=${EUREKA_DEFAULT_ZONE:http://eureka1:8761/eureka/}

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://dilip.logicsoft.online:5432/dilip}
spring.datasource.username=${DATASOURCE_USERNAME:dilip}
spring.datasource.password=${DATASOURCE_PASSWORD:lsipl}


# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
#spring.datasource.tomcat.initial-size=${DATASOURCE_TOMCAT_INITIAL_SIZE:0}
#spring.datasource.tomcat.max-wait=${DATASOURCE_TOMCAT_MAX_WAIT:20000}
#spring.datasource.tomcat.max-active=${DATASOURCE_TOMCAT_MAX_ACTIVE:50}
#spring.datasource.tomcat.max-idle=${DATASOURCE_TOMCAT_MAX_IDLE:15}
#spring.datasource.tomcat.min-idle=${DATASOURCE_TOMCAT_MIN_IDLE:8}
#spring.datasource.tomcat.default-auto-commit=${DATASOURCE_TOMCAT_DEFAULT_AUTO_COMMIT:true}

##hikari connection pooling
spring.datasource.hikari.auto-commit=${DATASOURCE_HIKARI_AUTO_COMMIT:true}
spring.datasource.hikari.maximum-pool-size=${DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:50}
spring.datasource.hikari.minimum-idle=${DATASOURCE_HIKARI_MINIMIUM_IDLE:8}
spring.datasource.hikari.idle-timeout=${DATASOURCE_HIKARI_IDLE_TIMEOUT:120000}
spring.datasource.continueOnError = ${DATASOURCE_CONTINUEONERROR:true}


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)

spring.jpa.generate-ddl=${JPA_GENERATE_DDL:false}

spring.jpa.show-sql=${JPA_SHOW_SQL:true}

spring.jpa.hibernate.ddl-auto = ${JPA_HIBERNATE_DDL_AUTO:none}

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=${HIBERNATE_TEMP_USE_JDBC_METADATA_DEFAULTS:false}

# Cache Configuration
#spring.jpa.properties.hibernate.cache.use_second_level_cache=${HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE:true}
#spring.jpa.properties.hibernate.cache.use_query_cache=${HIBERNATE_CACHE_USE_QUERY_CACHE:true}
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory


spring.jpa.properties.javax.persistence.sharedCache.mode=ALL

spring.zipkin.base-url=http://zipkin:9411/
spring.sleuth.sampler.probability=1